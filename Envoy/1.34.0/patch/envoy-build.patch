diff --git a/.bazelrc b/.bazelrc
index 51f693e143..ae15cb2e78 100644
--- a/.bazelrc
+++ b/.bazelrc
@@ -87,7 +87,7 @@ build:sanitizer --linkopt -ldl
 
 # Common flags for Clang
 build:clang --action_env=BAZEL_COMPILER=clang
-build:clang --linkopt=-fuse-ld=lld
+build:clang --linkopt=-fuse-ld=gold
 build:clang --action_env=CC=clang --host_action_env=CC=clang
 build:clang --action_env=CXX=clang++ --host_action_env=CXX=clang++
 build:clang --incompatible_enable_cc_toolchain_resolution=false
@@ -151,7 +151,7 @@ build:asan --copt -fno-optimize-sibling-calls
 # Clang ASAN/UBSAN
 build:clang-asan-common --config=clang
 build:clang-asan-common --config=asan
-build:clang-asan-common --linkopt -fuse-ld=lld
+build:clang-asan-common --linkopt -fuse-ld=gold
 build:clang-asan-common --linkopt --rtlib=compiler-rt
 build:clang-asan-common --linkopt --unwindlib=libgcc
 
@@ -185,7 +185,7 @@ build:clang-tsan --config=sanitizer
 build:clang-tsan --define ENVOY_CONFIG_TSAN=1
 build:clang-tsan --copt -fsanitize=thread
 build:clang-tsan --linkopt -fsanitize=thread
-build:clang-tsan --linkopt -fuse-ld=lld
+build:clang-tsan --linkopt -fuse-ld=gold
 build:clang-tsan --copt -DTHREAD_SANITIZER=1
 build:clang-tsan --build_tag_filters=-no_san,-no_tsan
 build:clang-tsan --test_tag_filters=-no_san,-no_tsan
@@ -206,7 +206,7 @@ build:clang-msan --test_tag_filters=-no_san
 build:clang-msan --define ENVOY_CONFIG_MSAN=1
 build:clang-msan --copt -fsanitize=memory
 build:clang-msan --linkopt -fsanitize=memory
-build:clang-msan --linkopt -fuse-ld=lld
+build:clang-msan --linkopt -fuse-ld=gold
 build:clang-msan --copt -fsanitize-memory-track-origins=2
 build:clang-msan --copt -DMEMORY_SANITIZER=1
 build:clang-msan --test_env=MSAN_SYMBOLIZER_PATH
diff --git a/api/bazel/repositories.bzl b/api/bazel/repositories.bzl
index 8669544cdf..1261bfbc39 100644
--- a/api/bazel/repositories.bzl
+++ b/api/bazel/repositories.bzl
@@ -36,6 +36,8 @@ def api_dependencies():
     )
     external_http_archive(
         name = "rules_buf",
+        patch_args = ["-p1"],
+        patches = ["@envoy_api//bazel:rules_buf-s390x.patch"],
     )
     external_http_archive(
         name = "rules_proto",
diff --git a/bazel/dependency_imports.bzl b/bazel/dependency_imports.bzl
index aef33aa103..70ab62ca24 100644
--- a/bazel/dependency_imports.bzl
+++ b/bazel/dependency_imports.bzl
@@ -27,7 +27,7 @@ GO_VERSION = "1.23.1"
 JQ_VERSION = "1.7"
 YQ_VERSION = "4.24.4"
 
-BUF_VERSION = "v1.50.0"
+BUF_VERSION = "local"
 
 def envoy_dependency_imports(go_version = GO_VERSION, jq_version = JQ_VERSION, yq_version = YQ_VERSION, buf_version = BUF_VERSION):
     rules_foreign_cc_dependencies()
diff --git a/bazel/envoy_binary.bzl b/bazel/envoy_binary.bzl
index cd33407040..953b9333e1 100644
--- a/bazel/envoy_binary.bzl
+++ b/bazel/envoy_binary.bzl
@@ -84,6 +84,7 @@ def _envoy_linkopts():
         ],
         "//conditions:default": [
             "-pthread",
+            "-latomic",
             "-lrt",
             "-ldl",
             "-Wl,-z,relro,-z,now",
diff --git a/bazel/repositories.bzl b/bazel/repositories.bzl
index 42a2137221..b7194ea00e 100644
--- a/bazel/repositories.bzl
+++ b/bazel/repositories.bzl
@@ -255,7 +255,13 @@ def envoy_dependencies(skip_targets = []):
     )
 
 def _boringssl():
-    external_http_archive(name = "boringssl")
+    external_http_archive(
+        name = "boringssl",
+        patch_args = ["-p1"],
+        patches = [
+            "@envoy//bazel:boringssl-s390x.patch",
+        ],
+    )
 
 def _boringssl_fips():
     external_http_archive(
@@ -749,6 +755,8 @@ def _com_github_google_quiche():
         name = "com_github_google_quiche",
         patch_cmds = ["find quiche/ -type f -name \"*.bazel\" -delete"],
         build_file = "@envoy//bazel/external:quiche.BUILD",
+        patches = ["@envoy//bazel/external:quiche-s390x.patch"],
+        patch_args = ["-p1"],
     )
 
 def _com_googlesource_googleurl():
@@ -768,7 +776,10 @@ def _com_github_grpc_grpc():
     external_http_archive(
         name = "com_github_grpc_grpc",
         patch_args = ["-p1"],
-        patches = ["@envoy//bazel:grpc.patch"],
+        patches = [
+            "@envoy//bazel:grpc.patch",
+            "@envoy//bazel:grpc-s390x.patch",
+        ],
         # Needed until grpc updates its naming (v1.62.0)
         repo_mapping = {"@com_github_cncf_udpa": "@com_github_cncf_xds"},
     )
@@ -844,6 +855,7 @@ def _proxy_wasm_cpp_host():
         patch_args = ["-p1"],
         patches = [
             "@envoy//bazel:proxy_wasm_cpp_host.patch",
+            "@envoy//bazel:proxy_wasm_cpp_host-s390x.patch",
         ],
     )
 
@@ -861,7 +873,11 @@ def _com_github_luajit_luajit():
     external_http_archive(
         name = "com_github_luajit_luajit",
         build_file_content = BUILD_ALL_CONTENT,
-        patches = ["@envoy//bazel/foreign_cc:luajit.patch"],
+        patches = [
+            "@envoy//bazel/foreign_cc:luajit-s390x.patch",
+            "@envoy//bazel/foreign_cc:luajit.patch",
+            "@envoy//bazel/foreign_cc:luajit-as.patch",
+        ],
         patch_args = ["-p1"],
         patch_cmds = ["chmod u+x build.py"],
     )
@@ -980,7 +996,10 @@ def _rules_ruby():
 def _foreign_cc_dependencies():
     external_http_archive(
         name = "rules_foreign_cc",
-        patches = ["@envoy//bazel:rules_foreign_cc.patch"],
+        patches = [
+            "@envoy//bazel:rules_foreign_cc.patch",
+            "@envoy//bazel:rules_foreign_cc-s390x.patch",
+        ],
         patch_args = ["-p1"],
     )
 
