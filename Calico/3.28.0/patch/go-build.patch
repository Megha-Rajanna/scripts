diff --git a/Dockerfile b/Dockerfile
index bd09afa..22b1086 100644
--- a/Dockerfile
+++ b/Dockerfile
@@ -73,6 +73,49 @@ RUN set -eux; \
             mingw64-gcc; \
     fi
 
+RUN set -eux; \
+    if [ "${TARGETARCH}" = "s390x" ]; then \
+	dnf install -y bzip2 sqlite gcc gcc-c++ zlib-devel wget tar iproute; \
+	wget https://sourceware.org/elfutils/ftp/0.190/elfutils-0.190.tar.bz2; \
+	tar xvf elfutils-0.190.tar.bz2; \
+	cd elfutils-0.190; \
+	./configure --disable-debuginfod; \
+	make; \
+	make install; \
+	ln -s /usr/bin/clang /usr/bin/clang-16; \
+
+	cd ..; \
+	git clone https://github.com/libbpf/libbpf.git; \
+	cd libbpf && git checkout v0.5.0; \
+	cd src; \
+	export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig/; \
+	make && make install; \
+
+	cd ..; \
+	wget http://ftp.gnu.org/gnu/bison/bison-3.8.tar.gz; \
+	tar -zxvf bison-3.8.tar.gz; \
+	cd bison-3.8; \
+	./configure; \
+	make; \
+	make install; \
+
+	cd ..; \
+	wget https://github.com/westes/flex/files/981163/flex-2.6.4.tar.gz; \
+	tar -zxvf flex-2.6.4.tar.gz; \
+	cd flex-2.6.4; \
+	./configure; \
+	make; \
+	make install; \
+
+	cd ..; \
+	git clone https://github.com/iproute2/iproute2.git; \
+	cd iproute2; \
+	git checkout v6.10.0; \
+	./configure; \
+	make; \
+	make install; \
+    fi
+
 RUN dnf clean all
 
 # Install Go official release
@@ -138,7 +181,7 @@ RUN set -eux; \
 # We can remove this once we update the Calico v3 APIs to use only types which are supported by the upstream controller-gen
 # tooling. Example: float, all the types in the numorstring package, etc.
 RUN set -eux; \
-    if [ "${TARGETARCH}" = "amd64" ]; then \
+    if [ "${TARGETARCH}" = "amd64" ] || [ "${TARGETARCH}" = "s390x" ]; then \
         curl -sfL https://github.com/projectcalico/controller-tools/releases/download/${CALICO_CONTROLLER_TOOLS_VERSION}/controller-gen -o /usr/local/bin/controller-gen && chmod +x /usr/local/bin/controller-gen; \
     fi
 
@@ -148,6 +191,11 @@ RUN set -eux; \
         curl -sfL https://github.com/google/go-containerregistry/releases/download/${CONTAINERREGISTRY_VERSION}/go-containerregistry_Linux_x86_64.tar.gz | tar xz -C /usr/local/bin crane; \
     fi
 
+RUN set -eux; \
+    if [ "${TARGETARCH}" = "s390x" ]; then \
+        curl -sfL https://github.com/google/go-containerregistry/releases/download/${CONTAINERREGISTRY_VERSION}/go-containerregistry_Linux_s390x.tar.gz | tar xz -C /usr/local/bin crane; \
+    fi
+
 RUN curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b /usr/local/bin $GO_LINT_VERSION
 
 # Install necessary Kubernetes binaries used in tests.
diff --git a/Makefile b/Makefile
index 8ee1f05..9fe7080 100644
--- a/Makefile
+++ b/Makefile
@@ -76,7 +76,7 @@ $(QEMU_IMAGE_CREATED):
 	touch $@
 
 .PHONY: image
-image: register image-qemu
+image: register
 	docker buildx build $(DOCKER_PROGRESS) --load --platform=linux/$(ARCH) -t $(GOBUILD_ARCH_IMAGE) -f Dockerfile .
 ifeq ($(ARCH),amd64)
 	docker tag $(GOBUILD_ARCH_IMAGE) $(GOBUILD_IMAGE)
